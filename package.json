{
	"name": "vscode-spring-boot-dashboard",
	"displayName": "Spring Boot Dashboard",
	"description": "Spring Boot Dashboard for VS Code",
	"main": "./dist/extension",
	"scripts": {
		"compile": "tsc -p .",
		"update-tpn": "node scripts/update-third-party-notice.js",
		"webpack": "webpack --mode development",
		"webpack-dev": "webpack --mode development --watch"
	},
	"contributes": {
		"commands": [
			{
				"category": "Spring Boot Dashboard",
				"command": "spring-boot-dashboard.refresh",
				"icon": "$(refresh)",
				"title": "Refresh"
			},
			{
				"category": "Spring Boot Dashboard",
				"command": "spring-boot-dashboard.localapp.run",
				"icon": "$(play)",
				"title": "Run"
			},
			{
				"category": "Spring Boot Dashboard",
				"command": "spring-boot-dashboard.localapp.runWithProfile",
				"icon": "$(play)",
				"title": "Run with Profile..."
			},
			{
				"category": "Spring Boot Dashboard",
				"command": "spring-boot-dashboard.localapp.stop",
				"icon": "$(debug-stop)",
				"title": "Stop"
			},
			{
				"category": "Spring Boot Dashboard",
				"command": "spring-boot-dashboard.localapp.open",
				"icon": "$(globe)",
				"title": "Open In Browser"
			},
			{
				"category": "Spring Boot Dashboard",
				"command": "spring-boot-dashboard.localapp.debug",
				"icon": "$(debug-alt-small)",
				"title": "Debug"
			},
			{
				"category": "Spring Boot Dashboard",
				"command": "spring-boot-dashboard.localapp.debugWithProfile",
				"icon": "$(debug-alt-small)",
				"title": "Debug with Profile..."
			},
			{
				"category": "Spring Boot Dashboard",
				"command": "spring-boot-dashboard.localapp.run-multiple",
				"icon": "$(run-all)",
				"title": "Run ..."
			},
			{
				"category": "Spring Boot Dashboard",
				"command": "spring-boot-dashboard.localapp.stop-multiple",
				"icon": "$(stop-circle)",
				"title": "Stop ..."
			},
			{
				"category": "Spring Boot Dashboard",
				"command": "spring-boot-dashboard.localapp.debug-multiple",
				"icon": "$(debug)",
				"title": "Debug ..."
			},
			{
				"category": "Spring Boot Dashboard",
				"command": "sts/livedata/refresh",
				"icon": "$(refresh)",
				"title": "Refresh Live Connection"
			},
			{
				"category": "Spring Boot Dashboard",
				"command": "spring.staticData.refresh",
				"icon": "$(refresh)",
				"title": "Refresh"
			},
			{
				"category": "Spring Boot Dashboard",
				"command": "spring.dashboard.endpoint.open",
				"icon": "$(globe)",
				"title": "Open"
			},
			{
				"category": "Spring Boot Dashboard",
				"command": "spring.dashboard.endpoint.navigate",
				"icon": "$(go-to-file)",
				"title": "Go to"
			},
			{
				"category": "Spring Boot Dashboard",
				"command": "spring.dashboard.bean.open",
				"icon": "$(go-to-file)",
				"title": "Open"
			},
			{
				"category": "Spring Boot Dashboard",
				"command": "spring.dashboard.bean.navigate",
				"icon": "$(go-to-file)",
				"title": "Open"
			},
			{
				"category": "Spring Boot Dashboard",
				"command": "spring.dashboard.mapping.showAll",
				"icon": "$(list-flat)",
				"title": "Show All Endpoints"
			},
			{
				"category": "Spring Boot Dashboard",
				"command": "spring.dashboard.mapping.showDefined",
				"icon": "$(list-filter)",
				"title": "Show Defined Endpoints"
			},
			{
				"category": "Spring Boot Dashboard",
				"command": "spring.dashboard.bean.showAll",
				"icon": "$(list-flat)",
				"title": "Show All Beans"
			},
			{
				"category": "Spring Boot Dashboard",
				"command": "spring.dashboard.bean.showDefined",
				"icon": "$(list-filter)",
				"title": "Show Defined Beans"
			},
			{
				"category": "Spring Boot Dashboard",
				"command": "spring.dashboard.bean.showDependencies",
				"icon": "$(type-hierarchy-sub)",
				"title": "Show Dependencies"
			},
			{
				"category": "Spring Boot Dashboard",
				"command": "spring.dashboard.bean.showInjectedInto",
				"icon": "$(type-hierarchy-super)",
				"title": "Show Injected Into"
			},
			{
				"category": "Spring Boot Dashboard",
				"command": "spring.dashboard.bean.showHierarchy",
				"icon": "$(type-hierarchy)",
				"title": "Show Bean Hierarchy"
			},
			{
				"category": "Spring Boot Dashboard",
				"command": "spring.promptToEnableActuator",
				"icon": "$(warning)",
				"title": "Live Information Unavailable"
			},
			{
				"category": "Spring Boot Dashboard",
				"command": "spring.beans.find",
				"icon": "$(search)",
				"title": "Find..."
			},
			{
				"category": "Spring Boot Dashboard",
				"command": "spring.mappings.find",
				"icon": "$(search)",
				"title": "Find..."
			},
			{
				"category": "Spring Boot Dashboard",
				"command": "spring.properties.find",
				"icon": "$(search)",
				"title": "Find..."
			},
			{
				"category": "Spring Boot Dashboard",
				"command": "spring.remoteApp.connect",
				"icon": "$(vm-connect)",
				"title": "Connect"
			},
			{
				"category": "Spring Boot Dashboard",
				"command": "spring.remoteApp.disconnect",
				"icon": "$(debug-disconnect)",
				"title": "Disconnect"
			}
		],
		"configuration": [
			{
				"id": "memory view settings",
				"order": 100,
				"properties": {
					"spring.dashboard.memory-view.display-data.max-datapoints": {
						"default": 10,
						"description": "Spring boot dashboard memory view - Display max data points in the graph",
						"type": "number"
					},
					"spring.dashboard.memory-view.fetch-data.delay-in-milliseconds": {
						"default": 5000,
						"description": "Spring boot dashboard memory view - Delay between fetching new data in milliseconds",
						"type": "number"
					}
				},
				"title": "Memory View Settings"
			},
			{
				"properties": {
					"spring.dashboard.enableGutter": {
						"default": "on",
						"description": "Specifies whether to show gutter icon in editors.",
						"enum": [
							"on",
							"off"
						],
						"enumDescriptions": [
							"Enable",
							"Disable"
						],
						"scope": "window",
						"type": "string"
					},
					"spring.dashboard.openUrl": {
						"default": "{protocol}://{hostname}:{port}{contextPath}",
						"description": "Defines which URL is opened when opening Spring Boot apps. Uses {protocol}, {hostname}, {port} and {contextPath} as placeholders.",
						"scope": "window",
						"type": "string"
					},
					"spring.dashboard.openWith": {
						"default": "integrated",
						"description": "Defines which browser to use when opening Spring Boot apps.",
						"enum": [
							"integrated",
							"external"
						],
						"enumDescriptions": [
							"VS Code's integrated browser",
							"External default browser"
						],
						"scope": "window",
						"type": "string"
					}
				},
				"title": "Spring Boot Dashboard"
			}
		],
		"icons": {
			"spring-bean": {
				"default": {
					"fontCharacter": "\\e900",
					"fontPath": "./resources/icons.woff"
				},
				"description": "bean icon"
			}
		},
		"menus": {
			"commandPalette": [
				{
					"command": "sts/livedata/refresh",
					"when": "false"
				},
				{
					"command": "spring-boot-dashboard.localapp.run",
					"when": "false"
				},
				{
					"command": "spring-boot-dashboard.localapp.runWithProfile",
					"when": "false"
				},
				{
					"command": "spring-boot-dashboard.localapp.stop",
					"when": "false"
				},
				{
					"command": "spring-boot-dashboard.localapp.open",
					"when": "false"
				},
				{
					"command": "spring-boot-dashboard.localapp.debug",
					"when": "false"
				},
				{
					"command": "spring-boot-dashboard.localapp.debugWithProfile",
					"when": "false"
				},
				{
					"command": "spring-boot-dashboard.refresh",
					"when": "false"
				},
				{
					"command": "spring.staticData.refresh",
					"when": "false"
				},
				{
					"command": "spring.dashboard.bean.navigate",
					"when": "false"
				},
				{
					"command": "spring.dashboard.bean.open",
					"when": "false"
				},
				{
					"command": "spring.dashboard.endpoint.navigate",
					"when": "false"
				},
				{
					"command": "spring.dashboard.endpoint.open",
					"when": "false"
				},
				{
					"command": "spring.dashboard.bean.showHierarchy",
					"when": "false"
				},
				{
					"command": "spring.dashboard.bean.showDependencies",
					"when": "false"
				},
				{
					"command": "spring.dashboard.bean.showInjectedInto",
					"when": "false"
				},
				{
					"command": "spring.promptToEnableActuator",
					"when": "false"
				},
				{
					"command": "spring.beans.find",
					"when": "false"
				},
				{
					"command": "spring.mappings.find",
					"when": "false"
				},
				{
					"command": "spring.properties.find",
					"when": "false"
				}
			],
			"view/item/context": [
				{
					"command": "spring-boot-dashboard.localapp.run",
					"group": "action@5",
					"when": "view == spring.apps && viewItem == BootApp_inactive"
				},
				{
					"command": "spring-boot-dashboard.localapp.debug",
					"group": "action@6",
					"when": "view == spring.apps && viewItem == BootApp_inactive"
				},
				{
					"command": "spring-boot-dashboard.localapp.runWithProfile",
					"group": "action@7",
					"when": "view == spring.apps && viewItem == BootApp_inactive"
				},
				{
					"command": "spring-boot-dashboard.localapp.debugWithProfile",
					"group": "action@8",
					"when": "view == spring.apps && viewItem == BootApp_inactive"
				},
				{
					"command": "spring-boot-dashboard.localapp.stop",
					"group": "action@8",
					"when": "view == spring.apps && viewItem == BootApp_running"
				},
				{
					"command": "spring-boot-dashboard.localapp.open",
					"group": "action@a",
					"when": "view == spring.apps && viewItem == BootApp_running"
				},
				{
					"command": "spring-boot-dashboard.localapp.run",
					"group": "inline@5",
					"when": "view == spring.apps && viewItem == BootApp_inactive"
				},
				{
					"command": "spring-boot-dashboard.localapp.debug",
					"group": "inline@6",
					"when": "view == spring.apps && viewItem == BootApp_inactive"
				},
				{
					"command": "spring-boot-dashboard.localapp.stop",
					"group": "inline@8",
					"when": "view == spring.apps && viewItem == BootApp_running"
				},
				{
					"command": "spring-boot-dashboard.localapp.open",
					"group": "inline@a",
					"when": "view == spring.apps && viewItem == BootApp_running"
				},
				{
					"command": "spring-boot-dashboard.localapp.run-multiple",
					"group": "action@11",
					"when": "view == spring.apps && !viewItem"
				},
				{
					"command": "spring-boot-dashboard.localapp.debug-multiple",
					"group": "action@12",
					"when": "view == spring.apps && !viewItem"
				},
				{
					"command": "spring-boot-dashboard.localapp.stop-multiple",
					"group": "action@13",
					"when": "view == spring.apps && !viewItem"
				},
				{
					"command": "sts/livedata/refresh",
					"group": "inline@5",
					"when": "view == spring.beans && viewItem == liveProcess"
				},
				{
					"command": "sts/livedata/refresh",
					"group": "inline@5",
					"when": "view == spring.mappings && viewItem == liveProcess"
				},
				{
					"command": "spring.staticData.refresh",
					"group": "inline@5",
					"when": "view == spring.beans && viewItem =~ /^bootApp/"
				},
				{
					"command": "spring.promptToEnableActuator",
					"group": "inline@5",
					"when": "view == spring.beans && viewItem =~ /^bootApp(?=.*?\\b\\+noActuator\\b)(?=.*?\\b\\+running\\b)/"
				},
				{
					"command": "spring.staticData.refresh",
					"group": "inline@5",
					"when": "view == spring.mappings && viewItem =~ /^bootApp/"
				},
				{
					"command": "spring.promptToEnableActuator",
					"group": "inline@5",
					"when": "view == spring.mappings && viewItem =~ /^bootApp(?=.*?\\b\\+noActuator\\b)(?=.*?\\b\\+running\\b)/"
				},
				{
					"command": "spring.dashboard.endpoint.open",
					"group": "inline@5",
					"when": "view == spring.mappings && viewItem =~ /spring:endpoint(?=.*?\\b\\+GET\\b)/"
				},
				{
					"command": "spring.dashboard.bean.showHierarchy",
					"group": "inline@5",
					"when": "view == spring.beans && viewItem == spring:bean"
				},
				{
					"command": "spring.dashboard.bean.showDependencies",
					"group": "action@5",
					"when": "viewItem == spring:bean"
				},
				{
					"command": "spring.dashboard.bean.showInjectedInto",
					"group": "action@7",
					"when": "viewItem == spring:bean"
				},
				{
					"command": "spring.remoteApp.connect",
					"group": "inline@a",
					"when": "view == spring.apps && viewItem =~ /^spring:remoteApp\\b(?!.*?\\b\\+connected\\b)/"
				},
				{
					"command": "spring.remoteApp.connect",
					"group": "action@a",
					"when": "view == spring.apps && viewItem =~ /^spring:remoteApp\\b(?!.*?\\b\\+connected\\b)/"
				},
				{
					"command": "spring.remoteApp.disconnect",
					"group": "inline@d",
					"when": "view == spring.apps && viewItem =~ /^spring:remoteApp\\b(?=.*?\\b\\+connected\\b)/"
				},
				{
					"command": "spring.remoteApp.disconnect",
					"group": "action@d",
					"when": "view == spring.apps && viewItem =~ /^spring:remoteApp\\b(?=.*?\\b\\+connected\\b)/"
				}
			],
			"view/title": [
				{
					"command": "spring-boot-dashboard.localapp.run-multiple",
					"group": "navigation@2",
					"when": "view == spring.apps"
				},
				{
					"command": "spring-boot-dashboard.localapp.stop-multiple",
					"group": "navigation@3",
					"when": "view == spring.apps"
				},
				{
					"command": "spring-boot-dashboard.refresh",
					"group": "navigation@5",
					"when": "view == spring.apps"
				},
				{
					"command": "spring.dashboard.mapping.showDefined",
					"group": "navigation@5",
					"when": "view == spring.mappings && spring.mappings:showMode != defined && spring.mappings:hasLiveProcess == true"
				},
				{
					"command": "spring.dashboard.mapping.showAll",
					"group": "navigation@8",
					"when": "view == spring.mappings && spring.mappings:showMode != all && spring.mappings:hasLiveProcess == true"
				},
				{
					"command": "spring.dashboard.bean.showDefined",
					"group": "navigation@5",
					"when": "view == spring.beans && spring.beans:showMode != defined && spring.beans:hasLiveProcess == true"
				},
				{
					"command": "spring.dashboard.bean.showAll",
					"group": "navigation@8",
					"when": "view == spring.beans && spring.beans:showMode != all && spring.beans:hasLiveProcess == true"
				},
				{
					"command": "spring.dashboard.bean.showDependencies",
					"group": "navigation@1",
					"when": "view == references-view.tree && reference-list.hasResult && reference-list.source == beanHierarchy && beanHierarchy:direction != dependencies"
				},
				{
					"command": "spring.dashboard.bean.showInjectedInto",
					"group": "navigation@1",
					"when": "view == references-view.tree && reference-list.hasResult && reference-list.source == beanHierarchy && beanHierarchy:direction != injectedInto"
				},
				{
					"command": "spring.beans.find",
					"group": "navigation@0",
					"when": "view == spring.beans"
				},
				{
					"command": "spring.mappings.find",
					"group": "navigation@0",
					"when": "view == spring.mappings"
				},
				{
					"command": "spring.properties.find",
					"group": "navigation@0",
					"when": "view == spring.properties"
				}
			]
		},
		"views": {
			"spring": [
				{
					"contextualTitle": "Spring",
					"icon": "resources/logo.png",
					"id": "spring.apps",
					"name": "Apps",
					"when": "java:serverMode || workbenchState==empty"
				},
				{
					"contextualTitle": "Spring",
					"icon": "resources/logo.png",
					"id": "spring.beans",
					"name": "Beans",
					"when": "java:serverMode || workbenchState==empty"
				},
				{
					"contextualTitle": "Spring",
					"icon": "resources/logo.png",
					"id": "spring.mappings",
					"name": "Endpoint Mappings",
					"when": "java:serverMode || workbenchState==empty"
				},
				{
					"contextualTitle": "Spring",
					"icon": "resources/logo.png",
					"id": "spring.properties",
					"name": "Properties",
					"type": "tree",
					"when": "java:serverMode && spring:hasLiveProcess == true"
				},
				{
					"contextualTitle": "Spring",
					"icon": "resources/logo.png",
					"id": "spring.memoryView",
					"name": "Memory",
					"type": "webview",
					"when": "java:serverMode && spring:hasLiveProcess == true"
				}
			]
		},
		"viewsContainers": {
			"activitybar": [
				{
					"icon": "resources/logo.png",
					"id": "spring",
					"title": "Spring Boot Dashboard"
				}
			]
		},
		"viewsWelcome": []
	},
	"activationEvents": [
		"onCommand:vscode-spring-boot.ls.start"
	],
	"dependencies": {
		"@pivotal-tools/jvm-launch-utils": "0.0.23",
		"chart.js": "4.4.6",
		"chartjs": "0.3.24",
		"chartjs-adapter-moment": "1.0.1",
		"get-port": "7.1.0",
		"lodash": "4.17.21",
		"moment": "2.30.1",
		"pidtree": "0.6.0",
		"uuid": "11.0.3"
	},
	"devDependencies": {
		"@types/glob": "8.1.0",
		"@types/lodash": "4.17.13",
		"@types/node": "22.9.1",
		"@types/uuid": "10.0.0",
		"json": "11.0.0",
		"ts-loader": "9.5.1"
	},
	"extensionDependencies": [
		"redhat.java",
		"vmware.vscode-spring-boot",
		"vscjava.vscode-java-debug"
	],
	"icon": "resources/logo.png",
	"preview": true,
	"aiKey": "f934e884-8ca2-453e-914d-eee9e8f179c4",
	"capabilities": {
		"virtualWorkspaces": false
	}
}
